@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap');

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    font-family: Inter;
    color: white;
    /*Background-image:
    - Propriedade que define imagem de fundo
    - Pode colocar imagens locais ou de websites com o url
    - Como colocar imagens:
    url("localdaimagem")

    - Também aceita gradientes de fundo, com 
    * linear-gradient(graus ou direcao, cor1, cor2...)
    * radial-gradient
    */
    background-image: url("../IMG/bg-modificado.jpg");
    /*Background-repeat
    Especifica se vai manter a imagem se repetindo ou não
    Valores: 
    - repeat: em todas as direções;
    - repeat-x: somente no eixo x;
    - repeat-y: somente no eixo y;
    - no-repeat: a imagem não se repete, pode ficar menor do que o tamanho do elemento
    */
    background-repeat: no-repeat;

    /*Background-position:
    - Especifica a posição onde a imagem estará localizada no elemento.
    - Isso é mais perceptível quando o background-size é maior do que 100% ou se a imagem for muito grande
    Valores:
    - background-position: eixoX, eixoy;
    - Medidas: left, top, center, right, bottom, porcentagem, px, rem, etc.
    */
    background-position:center 70%;

    /*Background-size:
    - Determina o tamanho da imagem em relação ao elemento que ocupa. Pode ter partes cortadas se a imagem for muito grande
    - Medidas: cover(cobre todo o conteúdo), auto(mantém o tamanho original da imagem), % do elemento, px, rem, etc.
    */
    background-size: 120%;

    /*Background-attachment
    Define se a imagem vai acompanhar o scroll da página ou não
    Valores: scroll (mantém onde estava), fixed (acompanha)
    */
    background-attachment: scroll;
}

.main-content{
    display: flex;
    justify-content: center;
    flex-direction: column;
    width: 100%;
    padding: 1rem;
}


.box-content{
    background: #000000cc   ;
    /* opacity: 10%; Opacity reduz a opacidade de todo o conteúdo*/
    padding: 14px 1rem 1rem 1rem;
    border-radius: 10px;
}
.box-content h1{
    text-align: left;
    margin-bottom: 14px;
    border-bottom: 2px solid white;
    padding-bottom: 7px;
}

.form-box{
    display: flex;
    justify-content: space-between;
    width: 100%;
}
.logo-box{
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}
.actual-form{
    width: 60%;
}
.form-group{
    display: flex;
    flex-direction: column;
    gap: 1rem 0px;
    padding: 10px;
    border: none;
}
.form-row{
    display: flex;
    flex-direction: row;
    justify-content: center;
    gap: 0px 10px;
}

/* .form-row .form-element :first-child{
    margin-right: 100px;
} */

.form-element{
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 1.2rem;
}

.form-element.form-two-elements{
    width: 50%;
}

/*Pseudoclasses
São classes internas de cada elemento que se relacionam com seus comportamentos, estados e relações entre seus elementos.

Alguns exemplos de pseudoclasses são

:active;
:hover;
:visited;
e outras.
*/
/*Pseudoclasse :only-child
Seletor de elementos que não possuem irmãos, isto é, que são únicos.
*/
.form-row .form-element:only-child{
    width: 65%;
    justify-content: space-between;
}




/*Pseudoclasse Funcional :has()
Pseudoclasse que serve para selecionar os elementos pais que possuem uma outra classe. Sua sintaxe é esta:

elemento_pai:has(.classe_dos_filhos)
 .form-row:has(.form-one-element){
    justify-content: center;
} */

.input{
    border: none;
    outline: none;
    background-color: #a1a1aac4;
    border-radius: 1rem;
    /* box-shadow: 0px 0px 10px white; */
    color: #e5e7eb;
    font-weight: 500;
    text-shadow: 1px 1px 5px #0000009a;
    padding: 8px;
    width: 60%;
    border: 2px solid #a1a1aac4;
}

.input:focus{
    background-color: #7c7c83c4;
    border: 2px solid rgba(230, 221, 255, 0.603);
    transition: 300ms;
}

.radio-box{
    width: 60%;
}

.form-element label{
    color: #f9fafb;
    width: 50%;
}

.form-row .form-element:only-child .input, .form-row .form-element:only-child textarea, .form-row .form-element:only-child .input-file-wrapper{
    width: 100%;
}

.input-file-wrapper{
    display: flex;
    justify-content: center;
    padding: 10px;
}

.input-file-box{
    display: flex;
    justify-content: center;
    width: 70%;
    padding: 5px;
}

.btn-input-file{
    background-color: #06b6d4;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: 600;
}
.btn-input-file:hover{
    background-color: #38bdf8;
}

.message-box{
    resize: none;
    border: none;
    outline: none;
    padding: 10px;
    font-family: arial;
    border-radius: 6px;
    background-color: #f3f4f6;
}

.message-box:focus{
    background-color: #d1d5db;
}

.btns-row{
    display: flex;
    justify-content: right;
}

/*Selecionando por atributo
Selecionando o input que possui o tipo submit
*/
input[type = "submit"]{
    background-color: #e11d48;
    color: white;
    font-weight: 600;
    padding: 10px;
    border-radius: 10px;
    border: none;
    cursor: pointer;
}
input[type = "submit"]:hover{
    background-color: #be123c;
    transition: 300ms;

}

input[type = "submit"]:active{
    transform: scale(105%);
}

footer{
    background: #00000073;
    margin-top: 10%;
}
.footer__title{
    font-size: 1.5rem;
}
.footer__ul li{
    margin-left: 2.5%;
}

.footer__row{
    display: flex;
}